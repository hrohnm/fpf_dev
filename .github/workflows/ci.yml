name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint frontend
        run: npm run lint --workspace=frontend
      - name: Lint backend
        run: npm run lint --workspace=backend

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: freiplatzfinder_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run frontend tests
        run: npm test --workspace=frontend
      - name: Run backend tests
        run: npm test --workspace=backend
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: freiplatzfinder_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          JWT_SECRET: test_jwt_secret
          REFRESH_TOKEN_SECRET: test_refresh_token_secret

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build --workspace=frontend
      - name: Build backend
        run: npm run build --workspace=backend
