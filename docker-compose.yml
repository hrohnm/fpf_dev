version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infrastructure/docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000/api
    depends_on:
      - backend
    networks:
      - freiplatzfinder-network

  backend:
    build:
      context: ./backend
      dockerfile: ../infrastructure/docker/backend/Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - PORT=4000
      - FRONTEND_URL=http://localhost:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=freiplatzfinder
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=dev_jwt_secret
      - JWT_EXPIRATION=1h
      - REFRESH_TOKEN_SECRET=dev_refresh_token_secret
      - REFRESH_TOKEN_EXPIRATION=7d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - UPLOAD_DIR=uploads
    depends_on:
      - postgres
      - redis
    networks:
      - freiplatzfinder-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=freiplatzfinder
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - freiplatzfinder-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - freiplatzfinder-network

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - freiplatzfinder-network

networks:
  freiplatzfinder-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
